server.port=${port:8082}
#spring.datasource.url=jdbc:mysql://mysql.bin:3306/Hjdupon
#spring.datasource.username=hjdupon
#spring.datasource.password=klm3ZULA

spring.jpa.database=MYSQL

#spring.datasource.url=jdbc:mysql://localhost/mysqlspring
#spring.datasource.username=root
#spring.datasource.password=klm3ZULA
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.validation-query=SELECT 1

#spring.datasource.url=jdbc:mysql://mysql.bin:3306/Bnsikkema
#spring.datasource.username=bnsikkema
#spring.datasource.password=Mayhem666

#spring.datasource.url=jdbc:mysql://localhost/BNdatabase
#spring.datasource.username=root
#spring.datasource.password=Mayhem666
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.validation-query=SELECT 1

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.ddl-auto = update

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
security.basic.enabled=true
# security.basic.enabled=false | true

# REST
#spring.data.rest.base-uri=api

# Naming strategy (my_table instead of MyTable)
# spring.jpa.hibernate
